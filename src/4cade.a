!cpu 6502
!to "build/LAUNCHER.SYSTEM",plain
*=$2000

         !source "src/constants.a"
         !source "src/macros.a"

         sta   $C00E
         sta   $C00C
         sta   $C004
         sta   $C002
         sta   $C000
         jsr   $FB2F
         jsr   $FC58
         jsr   Has64K                ; check for 64K (required)
         bcs   @no64K
         jsr   DisableAccelerator    ; set to 1 MHz
         jsr   Has128K               ; check for 128K (absence is OK, we just filter out some games)
         ror   MachineStatus
         jsr   HasJoystick           ; check for joystick (absence is OK, we just filter out some games)
         ror   MachineStatus         ; now bit 6 = 1 if 128K
                                     ;     bit 7 = 1 if joystick

         jsr   init                  ; initialize ProRWTS2 (bye bye ProDOS)
         +READ_RAM1_WRITE_RAM1
         ldx   #$00                  ; relocate rest of program to RAM bank 1 in language card
@FM      lda   FirstMover,x
         sta   $D000,x
         inx
         bne   @FM
         lda   @FM+2
         cmp   #>LastMover
         bcs   +
         inc   @FM+2
         inc   @FM+5
         bne   @FM
+
         jmp   Start

@no64K
         ldy   #@no64Klen
-        lda   @s_no64K,y
         sta   $6B6,y
         dey
         bpl   -
@hang    bmi   @hang
@s_no64K !raw  "REQUIRES 64K"
@no64Klen=*-@s_no64K

         ; ProRWTS2 has its own function to relocate itself
         !source "src/prorwts2.a"
         ; these routines will only be called once, from main memory, before relocating to language card
ProRWTSBuffer
         !source "src/hw.memcheck.a"
         !source "src/hw.joystick.a"
         !source "src/hw.normfast.a"
*=ProRWTSBuffer+512                  ; ProRWTS needs a 512-byte buffer for its init function
                                     ; so we reuse as much of the 1-time code as possible
                                     ; and fill the rest with zeros

FirstMover
!pseudopc $D000 {
!zone
Reenter                              ; self-running demos should call this to exit back to 4cade
         ldx   #$FF
         txs
         +READ_RAM1_WRITE_RAM1
         jmp   Main
Start
         lda   hddopendir+1
         ldy   hddopendir+3
         +STAY gRootDirectory        ; save current directory as 'root'

         jsr   LoadFile              ; load games list from file
         !word kGameListConfFile

         jsr   ParseGamesList        ; parse games list
         !word gGamesListStore
         !word ldrlo2                ; (ldrlo2) points to load address

         +LDAY SRC
         +STAY gAttractModeStore     ; save pointer to free space for next store

         jsr   LoadFile              ; load attract-mode configuration from file
         !word kAttractModeConfFile

         jsr   ParseKeyValueList     ; parse attract-mode configuration
         !word gAttractModeStore
         !word ldrlo2                ; (ldrlo2) points to load address

         +LDAY SRC
         +STAY gSlideshowStore       ; save pointer to free space for next store

Main
         bit   $C010
         jsr   BlankHGR
         jsr   AttractMode
         jmp   Reboot

AttractMode
         jsr   okvs_nth              ; get filename of next attract module
         !word gAttractModeStore
@index   !byte 0
         +STAY @key

         inc   @index                ; increment module index for next time
         jsr   okvs_len
         !word gAttractModeStore
         cmp   @index
         bne   +
         lda   #0
         sta   @index
+
         jsr   okvs_get
         !word gAttractModeStore
@key     !word $FDFD
         +STAY PTR

         jsr   +
         lda   $C000
         bpl   AttractMode
         rts
+
         ldy   #1
         lda   (PTR),y
         and   #$0F
         cmp   #$01
         clc
         beq   @Slideshow
         cmp   #$02
         sec
         beq   @Slideshow
         cmp   #$03
         bne   AttractMode
         beq   @SelfRunningDemo

@Slideshow
         php
         jsr   ResetPath
         +LDADDR kAttractModeSlideshowDirectory
         jsr   AddToPath
         +LDADDR kPathSeparator
         jsr   AddToPath
         +LDAY @key
         jsr   AddToPath
         jsr   LoadFile              ; load attract module configuration file
         !word gPathname

         jsr   ParseKeyValueList     ; parse slideshow configuration
         !word gSlideshowStore
         !word ldrlo2                ; (ldrlo2) points to load address

         plp                         ; carry clear = HGR, carry set = DHGR
         bcs   @DHGRSlideshow

         jsr   okvs_iter
         !word gSlideshowStore
         !word HGRLoad
         rts
@DHGRSlideshow
         jsr   BlankDHGR
         jsr   okvs_iter
         !word gSlideshowStore
         !word DHGRLoad
         jmp   BlankHGR

@SelfRunningDemo
         jsr   ResetPath
         +LDADDR kDemoDirectory
         jsr   AddToPath
         +LDADDR kPathSeparator
         jsr   AddToPath
         +LDAY @key
         jsr   AddToPath
         jsr   LoadFile              ; load attract module configuration file
         !word gPathname
         ldx   #(@end-@start-1)
-        lda   @start,x
         sta   $100,x
         dex
         bpl   -
         jmp   $100
@start
         ; this runs from main memory
         +READ_ROM_NO_WRITE
         jsr   $FE89
         jsr   $FE93
         sta   $C000
         sta   $C002
         sta   $C004
         sta   $C00C
         sta   $C00E
         jsr   $FB2F
         jsr   $FC58
         ldx   #$FF
         txs
         jmp   (ldrlo2)
@end

HGRLoad
         ldx   $C000
         bmi   Exit
         +STAY PTR
         jsr   ResetPath
         +LDADDR kHGRScreenshotDirectory
         jsr   AddToPath
         +LDADDR kPathSeparator
         jsr   AddToPath
         +LDAY PTR
         jsr   AddToPath
         jsr   LoadFile
         !word gPathname
         jsr   FizzleHGR
         jmp   WaitOnScreenshot

DHGRLoad
         ldx   $C000
         bmi   Exit
         +STAY PTR
         jsr   ResetPath
         +LDADDR kDHGRScreenshotDirectory
         jsr   AddToPath
         +LDADDR kPathSeparator
         jsr   AddToPath
         +LDAY PTR
         jsr   AddToPath
         jsr   LoadDHRFile
         !word gPathname
         jsr   FizzleDHGR
WaitOnScreenshot
         ldx   #0
         ldy   #0
@wait    lda   $C000
         bmi   Exit
         jsr   @burn
         dey
         bne   @wait
         dex
         bne   @wait
         rts
@burn    jsr   @burn2
@burn2   jsr   @burn3
@burn3   jsr   Exit
Exit     rts

Reboot
         ldx   #(@end-@start-1)
-        lda   @start,x
         sta   $300,x
         dex
         bpl   -
         jmp   $300
@start
         +READ_ROM_NO_WRITE
         jmp   $FAA6
@end

Home
         ldx   #(@end-@start-1)
-        lda   @start,x
         sta   $300,x
         dex
         bpl   -
         jmp   $300
@start
         ; this will be run from main memory
         +READ_ROM_NO_WRITE
         sta   $C00C                 ; get out of DHGR mode
         jsr   $FB2F                 ; TEXT
         jsr   $FC58                 ; HOME
         +READ_RAM1_WRITE_RAM1
         rts
@end

BlankHGR
         jsr   Home
         jsr   ClearHGR1             ; clear hi-res screen 1
         lda   $c057                 ; show hi-res screen 1 (now blank)
         lda   $c054
         lda   $c052
         lda   $c050
         rts
BlankDHGR
         jsr   Home
         jsr   ClearHGR1             ; clear hi-res screen 1
         sta   $C005
         jsr   ClearHGR1             ; clear hi-res screen 1 in auxmem
         sta   $C004
         sta   $c00d
         sta   $c057
         sta   $c054
         sta   $c052
         sta   $c050
         sta   $c05e
         rts
ClearHGR1
         ldx   #$20                  ; clear hi-res screen 1
         stx   @a+2
         lda   #0
         tay
@a       sta   $2000,y
         iny
         bne   @a
         inc   @a+2
         dex
         bne   @a
         rts

kGameListConfFile
         !byte @kGameListConfFile_e-@kGameListConfFile_b
@kGameListConfFile_b
         !text "GAMES.CONF"
@kGameListConfFile_e
kAttractModeConfFile
         !byte @kAttractModeConfFile_e-@kAttractModeConfFile_b
@kAttractModeConfFile_b
         !text "ATTRACT.CONF"
@kAttractModeConfFile_e

         ; these routines will only be called after relocating to language card
         !source "src/prodos.path.a"
         !source "src/glue.prorwts2.a"
         !source "src/okvs.a"
         !source "src/parse.common.a"
         !source "src/parse.games.a"
         !source "src/fx.hgr.fizzle.a"
         !source "src/fx.dhgr.fizzle.a"
gGamesListStore
         !word *+2                   ; address of first okvs store
}
LastMover
