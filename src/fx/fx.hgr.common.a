!macro HGR_CALC {
         asl
         tax
         and   #$F0
         bpl   @calc1
         ora   #$05
@calc1   bcc   @calc2
         ora   #$0A
@calc2   asl
         asl
         sta   $26
         txa
         and   #$0E
         adc   #$10
         asl   $26
         rol
         sta   $27
         eor   #$60
         sta   $3d
         lda   $26
         sta   $3c
}

HGRCalc
; in:    A = HGR row (0x00..0xBF)
; out:   A/X clobbered
;        Y preserved
;        ($26) points to first byte of given HGR row on hi-res page 1
;        ($3C) points to same byte on hi-res page 2
; based on 'Woz Recodes Hi-Res Address Calculations'
; Apple Assembly Line vol. 7 issue 3 (December 1986)
; http://www.txbobsc.com/aal/1986/aal8612.html#a9
         +HGR_CALC
         rts

HGRBlockCopy
; in:    A = HGR row / 8 (0x00..0x17)
;        Y = HGR column (0x00..0x27)
; out:   Y preserved
;        X = #$00
;        Z set
;        C clear
;        all other flags and registers clobbered
         asl
         asl
         asl
         +HGR_CALC
         clc
         ldx   #$08
@loop
         lda   ($3c),y
         sta   ($26),y
         lda   $27
         adc   #$04
         sta   $27
         eor   #$60
         sta   $3d
         dex
         bne   @loop
         rts

HGRBlockToWhite
; in:    A = HGR row / 8 (0x00..0x17)
;        Y = HGR column (0x00..0x27)
; out:   Y preserved
;        X = #$00
;        Z set
;        C clear
;        all other flags and registers clobbered
         asl
         asl
         asl
         +HGR_CALC
         clc
         ldx   #$08
@loop
         lda   #$7F
         sta   ($26),y
         lda   $27
         adc   #$04
         sta   $27
         eor   #$60
         sta   $3d
         dex
         bne   @loop
         rts
