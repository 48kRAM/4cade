mirror_src1_rad   = $E8      ; word
mirror_dest1_rad  = $EA      ; word
mirror_src2_rad   = $EC      ; word
mirror_dest2_rad  = $EE      ; word
src1_rad          = $F0      ; word
dest1_rad         = $F2      ; word
src2_rad          = $F4      ; word
dest2_rad         = $F6      ; word
reverse_input     = $FC      ; word
input_rad         = $FE      ; word

         +BUILD_HGR_LOOKUP_TABLES hgrlo, hgr1hi
         +BUILD_HGR_MIRROR_LOOKUP_TABLES hgrlomirror, hgr1himirror
         +BUILD_MIRROR_COLS mirror_cols
         +BUILD_SPARSE_BITMASKS copymasks, mirror_copymasks
         +LDADDR Coordinates
         +ST16 input_rad
         +LDADDR EndCoordinates-2
         +ST16 reverse_input
         jmp   Loop
Exit     rts
Loop     ldy   #0
         lda   (input_rad),y
         bmi   Exit
         tax
         +ROW_X_TO_BASE_ADDRESSES
         +ROW_X_TO_MIRROR_ADDRESSES
         inc   input_rad
         lda   (input_rad),y
         +HIGH_3_LOW_5 input_rad

         ; top-left quadrant (original row, original column, original input_rad order)
         +COPY_BIT src1_rad, dest1_rad, copymasks
         +COPY_BIT src2_rad, dest2_rad, copymasks

         ; bottom-right quadrant (opposite row, opposite column, original input_rad order)
         lda   mirror_cols,y
         tay
         +COPY_BIT mirror_src1_rad, mirror_dest1_rad, mirror_copymasks
         +COPY_BIT mirror_src2_rad, mirror_dest2_rad, mirror_copymasks

         ldy   #0
         lda   (reverse_input),y
         tax
         +ROW_X_TO_BASE_ADDRESSES
         +ROW_X_TO_MIRROR_ADDRESSES
         iny
         lda   (reverse_input),y
         +HIGH_3_LOW_5 reverse_input

         ; bottom-left quadrant (opposite row, original column, reverse input_rad order)
         +COPY_BIT mirror_src1_rad, mirror_dest1_rad, copymasks
         +COPY_BIT mirror_src2_rad, mirror_dest2_rad, copymasks

         ; top-right quadrant (same row, opposite column, reverse input_rad order)
         lda   mirror_cols,y
         tay
         +COPY_BIT src1_rad, dest1_rad, mirror_copymasks
         +COPY_BIT src2_rad, dest2_rad, mirror_copymasks

         inc   input_rad
         bne   +
         inc   input_rad+1
+        lda   reverse_input
         beq   +
         dec   reverse_input
         dec   reverse_input
         jmp   Loop
+        dec   reverse_input
         dec   reverse_input
         dec   reverse_input+1
         bit   $c000
         bmi   +
         jmp   Loop
+        rts
